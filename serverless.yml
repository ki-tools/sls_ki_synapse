service: 
  name: sls-ki-synapse

plugins:
  - serverless-python-requirements
  - serverless-domain-manager

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, "dev"}
  profile: ${self:custom.slsDeploy}.AWS_PROFILE}
  region: ${self:custom.slsDeploy}.AWS_REGION}
  timeout: 30
  environment:
    SERVICE_NAME: ${self:service}
    SERVICE_STAGE: ${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource: { "Fn::Join" : ["", ["arn:aws:ssm:${self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":parameter/${self:service}/${self:provider.stage}/*" ] ]  }

functions:
  graphql:
    handler: handlers/graphql_handler.graphql
    events:
      - http:
          path: /graphql
          method: POST
          authorizer: auth
          cors: true
  auth:
    handler: handlers/auth_handler.authenticate

custom:
  slsDeploy: ${file(./private.sls.deploy.json):${self:provider.stage}
  customDomain:
    enabled: ${self:custom.slsDeploy}.DOMAIN_ENABLED}
    domainName: ${self:custom.slsDeploy}.DOMAIN_NAME}
    basePath: ${self:custom.slsDeploy}.DOMAIN_BASE_PATH}
    certificateName: ${self:custom.slsDeploy}.DOMAIN_CERTIFICATE_NAME}
    createRoute53Record: ${self:custom.slsDeploy}.DOMAIN_CREATE_ROUTE_53_RECORD}
    endpointType: ${self:custom.slsDeploy}.DOMAIN_ENDPOINT_TYPE}
  pythonRequirements:
    dockerizePip: non-linux
     # Do not slim the dependencies. PIL/Pillow needs the .pyc files
    slim: false
    noDeploy:
      - pytest

package:
  exclude:
    - private.*
    - .venv/**
    - .vscode/**
    - node_modules/**
    - __pycache__/**
    - .pytest_cache/**
    - requirements-dev.txt
    - templates
    - tests
    - scripts
