service: 
  name: sls-ki-synapse

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, 'dev'}
  profile: ${file(./private.sls.deploy.json):${self:provider.stage}.AWS_PROFILE}
  region: ${file(./private.sls.deploy.json):${self:provider.stage}.AWS_REGION}
  timeout: 30
  environment:
    SERVICE_NAME: "${self:service}"
    SERVICE_STAGE: "${self:provider.stage}"
    SLIDE_DECKS_BUCKET_NAME: ${self:custom.slideDeckBucketName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource: { "Fn::Join" : ["", ["arn:aws:ssm:${self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":parameter/${self:service}/${self:provider.stage}/*" ] ]  }
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - 'arn:aws:s3:::${self:custom.slideDeckBucketName}/*'

functions:
  graphql:
    handler: handlers/graphql_handler.graphql
    events:
      - http:
          path: /graphql
          method: POST
          authorizer: auth
          cors: true
  auth:
    handler: handlers/auth_handler.authenticate

resources:
  Resources:
    slideDeckBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:custom.slideDeckBucketName}


custom:
  slideDeckBucketName: "${self:service}-slide-decks-${self:provider.stage}"
  pythonRequirements:
    dockerizePip: non-linux
     # Do not slim the dependencies. PIL/Pillow needs the .pyc files
    slim: false
    noDeploy:
      - pytest

package:
  exclude:
    - private.*
    - .venv/**
    - .vscode/**
    - node_modules/**
    - __pycache__/**
    - .pytest_cache/**
    - requirements-dev.txt
    - templates
    - tests
    - scripts
